name: Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      security-events: write
      packages: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-cache-
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci
      
    - name: Build project
      run: npm run build
      env:
        REACT_APP_BOOKS_API_URL: ${{ vars.REACT_APP_BOOKS_API_URL }}

    - name: Running tests
      run: npm run test:ci

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'javascript'

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: 'security'

    - name: Upload build artifacts
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: |
          build

  deploy:
    runs-on: ubuntu-latest
    environment: Production
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
        path: build

    - name: Deploy to Netlify
      run: npx netlify deploy --dir=build --prod --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
